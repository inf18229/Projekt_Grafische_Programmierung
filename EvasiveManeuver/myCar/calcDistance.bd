classType myCar.calcDistance
blockdiagramSpecification Main {
	methodBody calc {
		outPin active
	{
			connection_18
		}
	}
multiplication at (301, 196) {
		inPin connection_14
		inPin connection_15 {
			bendpoints (0, 20)
		}
		outPin {
			connection_1
		}
	}
	multiplication at (301, 136) {
		inPin connection_8
		inPin connection_10 {
			bendpoints (0, 20)
		}
		outPin {
			connection_2
		}
	}
	addition at (341, 166) {
		inPin connection_2
		inPin connection_1
		outPin {
			connection_6
		}
	}
	division at (201, 126) {
		inPin connection_9
		inPin connection_7
		outPin {
			connection_10, connection_8
		}
	}
	literal unit resources.m "1.0" at (141, 143) size (49, 0) {
		outPin {
			connection_7
		}
	}
	complexIdentifier MathLib_instance at (421, 171) size (7, 3) {
		label at (0, 1)
		methodCall SystemLib.Math.MathLib.sqrt {
			argumentPin val at (left, 0) connection_6
			returnPin at (right, 0) {
				connection_16
			}
			sequenceCall at (0, 6) {
				inPin
			}
		}
	}
	methodArgumentIdentifier calc.x at (141, 125) {
		label at (0, -31)
		outPin {
			connection_9
		}
		sequenceCall {
			inPin
		}
	}
	literal unit resources.m "1.0" at (141, 203) size (49, 0) {
		outPin {
			connection_12
		}
	}
	division at (201, 186) {
		inPin connection_13
		inPin connection_12
		outPin {
			connection_15, connection_14
		}
	}
	methodArgumentIdentifier calc.y at (141, 185) {
		label at (0, -31)
		outPin {
			connection_13
		}
		sequenceCall {
			inPin
		}
	}
	multiplication at (561, 156) {
		inPin connection_17
		inPin connection_16
		outPin {
			connection_19
		}
	}
	literal unit resources.m "1.0" at (501, 153) size (49, 0) {
		outPin {
			connection_17
		}
	}
	return at (631, 165) {
		label at (0, 0)
		inPin connection_19
		sequenceCall {
			inPin connection_18
		}
	}
}